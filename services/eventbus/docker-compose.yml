version: '3.8'

services:
  # Event Bus API Service
  eventbus-api:
    build: .
    ports:
      - "8080:8080"
    environment:
      NATS_URL: "nats://nats:4222"
      REDIS_URL: "redis://redis:6379"
      STREAM_NAME: "ANUMATE_EVENTS"
      DEAD_LETTER_STREAM: "ANUMATE_DEAD_LETTERS"
    depends_on:
      - nats
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    
  # NATS JetStream
  nats:
    image: nats:2.10-alpine
    ports:
      - "4222:4222"
      - "8222:8222" # Management interface
    command: [
      "--jetstream", 
      "--store_dir=/data",
      "--max_memory_store=1GB",
      "--max_file_store=10GB"
    ]
    volumes:
      - nats-data:/data
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8222/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    
  # Redis for metrics and tracking
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    
  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    
  # Grafana for monitoring dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./monitoring/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./monitoring/grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - grafana-data:/var/lib/grafana
    restart: unless-stopped

volumes:
  nats-data:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  default:
    driver: bridge
