apiVersion: apps/v1
kind: Deployment
metadata:
  name: anumate-integration-service
  namespace: anumate
  labels:
    app: anumate-integration-service
    component: infrastructure
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: anumate-integration-service
  template:
    metadata:
      labels:
        app: anumate-integration-service
        component: infrastructure
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8090"
        prometheus.io/path: "/v1/metrics"
    spec:
      serviceAccountName: anumate-integration-service
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: integration-service
        image: anumate/integration-service:latest
        imagePullPolicy: Always
        ports:
        - name: http-api
          containerPort: 8090
          protocol: TCP
        - name: http-gateway
          containerPort: 8080
          protocol: TCP
        env:
        - name: REDIS_URL
          value: "redis://anumate-redis:6379"
        - name: LOG_LEVEL
          value: "info"
        - name: GATEWAY_ENABLED
          value: "true"
        - name: HEALTH_MANAGER_ENABLED
          value: "true"
        - name: PYTHONPATH
          value: "/app/src"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http-api
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http-api
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: config
        configMap:
          name: anumate-integration-config
      - name: logs
        emptyDir: {}
      terminationGracePeriodSeconds: 30
      
---
apiVersion: v1
kind: Service
metadata:
  name: anumate-integration-service
  namespace: anumate
  labels:
    app: anumate-integration-service
    component: infrastructure
spec:
  type: ClusterIP
  ports:
  - name: http-api
    port: 8090
    targetPort: http-api
    protocol: TCP
  - name: http-gateway
    port: 8080
    targetPort: http-gateway
    protocol: TCP
  selector:
    app: anumate-integration-service

---
apiVersion: v1
kind: Service
metadata:
  name: anumate-api-gateway
  namespace: anumate
  labels:
    app: anumate-integration-service
    component: gateway
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: http-gateway
    protocol: TCP
  - name: https
    port: 443
    targetPort: http-gateway
    protocol: TCP
  selector:
    app: anumate-integration-service

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: anumate-integration-service
  namespace: anumate
  labels:
    app: anumate-integration-service

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: anumate-integration-service
  namespace: anumate
rules:
- apiGroups: [""]
  resources: ["services", "endpoints", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: anumate-integration-service
  namespace: anumate
subjects:
- kind: ServiceAccount
  name: anumate-integration-service
  namespace: anumate
roleRef:
  kind: Role
  name: anumate-integration-service
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: anumate-integration-config
  namespace: anumate
  labels:
    app: anumate-integration-service
data:
  config.yaml: |
    service_name: "anumate-integration-service"
    version: "1.0.0"
    redis_url: "redis://anumate-redis:6379"
    gateway_enabled: true
    health_manager_enabled: true
    circuit_breaker_failure_threshold: 5
    circuit_breaker_recovery_timeout: 60.0
    load_balancer_strategy: "round_robin"

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: anumate-integration-service-hpa
  namespace: anumate
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: anumate-integration-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: anumate-integration-service-pdb
  namespace: anumate
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: anumate-integration-service
