version: '3.8'

services:
  receipt-service:
    build: .
    image: anumate/receipt-service:v1.0.0
    container_name: anumate-receipt-service
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql+asyncpg://anumate_admin:${DB_PASSWORD}@postgres:5432/anumate
      - RECEIPT_SIGNING_KEY=${RECEIPT_SIGNING_KEY}
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - anumate-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: anumate-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=anumate
      - POSTGRES_USER=anumate_admin
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    networks:
      - anumate-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U anumate_admin -d anumate"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: anumate-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - anumate-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  anumate-network:
    driver: bridge
